{"version":3,"sources":["components/graphCreation.js","assets/basketball_logo_t.png","components/live.js","components/sidebar.js","components/header.js","components/homepage.js","components/teams.js","components/players.js","components/player.js","components/standings.js","components/schedules.js","components/team.js","App.js","index.js"],"names":["CustomTooltip","active","payload","label","glossary","all_data","all_needed_stats","type","team","find","obj","fullName","className","style","backgroundColor","padding","borderRadius","src","logo","alt","width","height","marginLeft","value","toFixed","conference","rank","GraphCreation","all_team_data","team_mappings","type_of_graph","stat_to_graph","stats","split","data","team_stats","interval","dataKey","xAxisId","tickLine","hide","content","animationEasing","animationDuration","barSize","barGap","map","entry","index","fill","getMainColor","shortName","hex","stroke","position","getSecondaryColor","processGraph","this","props","Component","Live","getLiveGames","a","fetch","process","response","json","body","status","getTeamsMappings","colorScore","score","fontSize","border","calcScores","home_score","away_score","score_arr","push","load_data","id","state","liveGames","api","games","item","i","homeTeamId","hTeam","teamId","awayTeamId","vTeam","homeTeamScore","points","awayTeamScore","homeTeamName","teamsMappings","awayTeamName","homeObj","homeLogo","ball_logo","undefined","awayObj","awayLogo","scoreColors","liveGamesLoaded","teamsMappingsLoaded","then","res1","setState","res2","catch","err","console","log","Sidebar","href","require","config","Homepage","Tabs","defaultActiveKey","Tab","eventKey","title","Teams","teams","nbaFranchise","city","to","pathname","isLoaded","loadResponse","Players","getAllPlayers","Error","message","goToPlayerPage","window","location","assign","rawData","players","length","dataRows","currentRow","playerName","firstName","lastName","playerId","collegeName","startNba","dateOfBirth","weightInKilograms","heightInMeters","playerData","columns","field","sort","rows","res3","striped","bordered","responsive","Player","getPlayerDetails","playerImageURL","playerDetails","playerImageALT","leagues","standard","jersey","affiliation","playerDetailsLoaded","match","params","Standing","getStandings","standings","comp_data","b","parseInt","forEach","new_stats","found_teamid","e","property","standingsLoaded","standingsWest","standingsEast","filter","name","Schedules","homeTeamShortName","awayTeamShortName","localTime","Intl","DateTimeFormat","timeZone","year","month","day","hour","minute","timeZoneName","format","Date","startTimeUTC","statusGame","arena","class","maxWidth","Team","getTeamData","all_teams_data","teamData","averageMetrics","parseFloat","teamMetrics","teamLabels","x","load_graph","datasets","pointBackgroundColor","borderColor","pointHighlightStroke","labels","options","legend","display","text","scale","reverse","gridLines","color","ticks","beginAtZero","teamLogoALT","nickname","confName","divName","allData","App","res","team_data","comparison","team_names","temp_data","api_team","found_city","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1381967.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { getMainColor, getFullName, getSecondaryColor } from 'nba-color';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, Label, ResponsiveContainer\r\n} from 'recharts';\r\n\r\n\r\nconst CustomTooltip = ({ active, payload, label, glossary, all_data, all_needed_stats, type} ) => {\r\n\r\n  let fill_data = () => {\r\n    if(type === 'doublebar'){\r\n      return(\r\n        <div>\r\n          <p>{`${glossary[all_needed_stats[0]]}: ${payload[0].value} `}</p>\r\n          <p>{`${glossary[all_needed_stats[1]]}: ${payload[1].value} `}</p>\r\n          <p>{`${glossary[all_needed_stats[2]]}: ${(team[all_needed_stats[2]] * 100).toFixed(1)}% `}</p>\r\n        </div>\r\n      )\r\n    } else if (type === 'bar'){\r\n      return(\r\n        <div>\r\n          <p>{`${glossary[all_needed_stats]}: ${payload[0].value} `}</p>\r\n        </div>\r\n      )\r\n    } else if (type === 'singlebar'){\r\n      return(\r\n        <div>\r\n          <p>{`Win Percentage: ${(payload[0].value * 100).toFixed(1)}% `}</p>\r\n          <p>{`Rank in Conference: ${team.conference.rank} `}</p>\r\n        </div>\r\n      )\r\n    } \r\n    \r\n  }\r\n\r\n  let team = all_data.find(obj => {\r\n    return obj.fullName === label\r\n  })\r\n\r\n  if (active) {\r\n    return (\r\n      <div className=\"custom-tooltip\" style={{backgroundColor: '#f5f5f5ee', padding: \"10px\", borderRadius: \"5px\"}}>\r\n        <h5 className=\"label\">{`${label}`} \r\n          <img className=\"img-fluid\" src={team.logo} alt=\"teamlogo\" style={{width: 70, height: 'auto', marginLeft: '1rem'}}/>\r\n        </h5>\r\n        \r\n        {fill_data()}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction processGraph(all_data, all_team_data, team_mappings, type_of_graph, stat_to_graph){\r\n\r\n  if(type_of_graph === \"doublebar\"){\r\n    let stats=stat_to_graph.split(\" \");\r\n    return(\r\n      <ResponsiveContainer width={\"97%\"} height={600}>\r\n        <BarChart\r\n          data={all_team_data.team_stats}\r\n        >\r\n          <XAxis type=\"category\" interval={0} dataKey={\"fullName\"} xAxisId={0} tickLine={false} hide/>\r\n          <XAxis type=\"category\" dataKey={\"fullName\"} xAxisId={1} tickLine={false} hide/>\r\n          <YAxis interval=\"preserveStartEnd\" />\r\n          <Tooltip content={<CustomTooltip glossary={all_team_data.glossary} all_data={all_team_data.team_stats} all_needed_stats={stats} type={type_of_graph}/>} animationEasing=\"ease-in-out\" />\r\n          <CartesianGrid />\r\n          <Bar dataKey={stats[0]} \r\n            animationDuration={2000}\r\n            barSize={20}\r\n            barGap={0}\r\n            xAxisId={0}\r\n          >\r\n          {\r\n            all_team_data.team_stats.map((entry, index) => {\r\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\r\n              return <Cell fill={getMainColor(entry.shortName).hex} stroke={\"black\"} key={index}/>;\r\n            })\r\n          }\r\n            <LabelList dataKey=\"shortName\" position='top' />\r\n          </Bar>\r\n\r\n          <Bar dataKey={stats[1]}\r\n            animationDuration={2000}\r\n            barSize={20}\r\n            barGap={0}\r\n            xAxisId={1}\r\n          >\r\n          {\r\n            all_team_data.team_stats.map((entry, index) => {\r\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\r\n              return <Cell fill={getSecondaryColor(entry.shortName).hex} stroke={\"black\"} key={index}/>;\r\n            })\r\n          }\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  if(type_of_graph === \"bar\"){\r\n    return(\r\n      <ResponsiveContainer width={\"97%\"} height={600}>\r\n        <BarChart\r\n          data={all_team_data.team_stats}\r\n        >\r\n          <XAxis type=\"category\" dataKey={\"fullName\"} tickLine={false} hide/>\r\n          <YAxis interval=\"preserveStartEnd\" />\r\n          {/* <YAxis interval=\"preserveStartEnd\" type=\"number\" domain={['dataMin', 'dataMax']} /> */}\r\n          <CartesianGrid />\r\n          <Tooltip content={<CustomTooltip glossary={all_team_data.glossary} all_data={all_team_data.team_stats} all_needed_stats={stat_to_graph} type={type_of_graph}/>} animationEasing=\"ease-in-out\" />\r\n          <Bar dataKey={stat_to_graph} \r\n          animationDuration={2000}\r\n          >\r\n          {\r\n            all_team_data.team_stats.map((entry, index) => {\r\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\r\n              return <Cell fill={getMainColor(entry.shortName).hex} stroke={getSecondaryColor(entry.shortName).hex} key={index}/>;\r\n            })\r\n          }\r\n            <LabelList dataKey=\"shortName\" />\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  if(type_of_graph === \"singlebar\"){\r\n    return(\r\n      <ResponsiveContainer width={\"80%\"} height={500}>\r\n        <BarChart\r\n          data={all_team_data}\r\n        >\r\n          <XAxis type=\"category\" dataKey={'fullName'} tickLine={false} hide/>\r\n          <YAxis interval=\"preserveStartEnd\" />\r\n          <CartesianGrid />\r\n          <Tooltip content={<CustomTooltip all_data={all_team_data} all_needed_stats={stat_to_graph} type={type_of_graph}/>} animationEasing=\"ease-in-out\" />\r\n          <Bar dataKey={stat_to_graph} \r\n          animationDuration={2000}\r\n          >\r\n          {\r\n            all_team_data.map((entry, index) => {\r\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\r\n              return <Cell key={index} fill={getMainColor(entry.shortName).hex} stroke={getSecondaryColor(entry.shortName).hex} />;\r\n            })\r\n          }\r\n          <LabelList dataKey=\"shortName\" />\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default class GraphCreation extends Component {\r\n\r\n    render() {\r\n        return(\r\n          processGraph(this.props.all_data, this.props.all_team_data, this.props.team_mappings, this.props.type_of_graph, this.props.stat_to_graph)\r\n        )\r\n    }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/basketball_logo_t.0697bb24.png\";","import React, { Component } from 'react';\r\nimport './live.css';\r\nimport ball_logo from '../assets/basketball_logo_t.png';\r\n\r\nexport default class Live extends Component {\r\n \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      liveGamesLoaded: false,\r\n      teamsMappingsLoaded: false,\r\n      liveGames: {},\r\n      teamsMappings: {}\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    \r\n    this.getLiveGames()\r\n      .then(res1 => this.setState({ \r\n        liveGames: res1,\r\n        liveGamesLoaded: true\r\n      }))\r\n      .then(this.getTeamsMappings()\r\n        .then(res2 => this.setState({ \r\n          teamsMappings: res2,\r\n          teamsMappingsLoaded: true,\r\n        })))\r\n      .catch(err => console.log(err));\r\n    \r\n  }\r\n\r\n\r\ngetLiveGames = async () => {\r\n    const response = await fetch('/api/games/live', \r\n      {\"method\": \"GET\",\r\n       \"headers\":\r\n       {\r\n        \"x-rapidapi-host\": process.env.REACT_APP_NONFREE_API_URL,\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        }\r\n      });\r\n      \r\n      const body = await response.json();\r\n      \r\n      if (response.status !== 200) {\r\n        return {}; \r\n      }\r\n      \r\n      return body;\r\n\r\n}\r\n\r\ngetTeamsMappings = async () => {\r\n    const response = await fetch('/api/teams/mappings', \r\n      {\"method\": \"GET\",\r\n       \"headers\":\r\n       {\r\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        }\r\n      });\r\n      \r\n      const body = await response.json();\r\n      \r\n      if (response.status !== 200) {\r\n        return {}; \r\n      }\r\n      \r\n      return body;\r\n\r\n}\r\n\r\ncolorScore = (score, status) => {\r\n  if(status === 'win'){return <h3 className='text-success' style={{fontSize:\"1.4vw\", backgroundColor: 'black', border: '2px solid gray'}}>{score}</h3>}\r\n  if(status === 'lose'){return <h3 className='text-danger' style={{fontSize:\"1.4vw\", backgroundColor: 'black', border: '2px solid gray'}}>{score}</h3>}\r\n  if(status === 'tie'){return <h3 className='text-warning' style={{fontSize:\"1.4vw\", backgroundColor: 'black', border: '2px solid gray'}}>{score}</h3>}\r\n}\r\n\r\ncalcScores = (home_score, away_score) => {\r\n  let score_arr = [];\r\n  if(home_score > away_score){\r\n      score_arr.push(this.colorScore(home_score, 'win'));\r\n      score_arr.push(this.colorScore(away_score, 'lose'));\r\n  }\r\n  else if(home_score < away_score){\r\n      score_arr.push(this.colorScore(home_score, 'lose'));\r\n      score_arr.push(this.colorScore(away_score, 'win'));\r\n  }\r\n  else{\r\n      score_arr.push(this.colorScore(home_score, 'tie'));\r\n      score_arr.push(this.colorScore(away_score, 'tie'));\r\n  }\r\n  return score_arr;\r\n}\r\n\r\n\r\nload_data = () => {\r\n  return(\r\n        <div className=\"container live_games\" id=\"liveGames\">\r\n          <div className='row header' >\r\n            <div className='col-6 '>\r\n                <h4 style={{fontSize:\"1.5vw\"}}>HOME</h4>\r\n            </div>\r\n            <div className='col-6 '>\r\n              <h4 style={{fontSize:\"1.5vw\"}}>AWAY</h4>\r\n            </div>\r\n          </div>\r\n\r\n         {this.state.liveGames.api.games.map((item, i) => {\r\n           const homeTeamId = item.hTeam.teamId;\r\n           const awayTeamId = item.vTeam.teamId;\r\n           const homeTeamScore = item.hTeam.score.points;\r\n           const awayTeamScore = item.vTeam.score.points;\r\n           const homeTeamName = this.state.teamsMappings[homeTeamId];\r\n           const awayTeamName = this.state.teamsMappings[awayTeamId];\r\n           const homeObj = this.props.all_data.team_stats.find(obj => {\r\n             return obj.fullName === homeTeamName\r\n           })\r\n           let homeLogo=ball_logo;\r\n           if(homeObj !== undefined){homeLogo=homeObj.logo}\r\n\r\n           const awayObj = this.props.all_data.team_stats.find(obj => {\r\n            return obj.fullName === awayTeamName\r\n           })\r\n           let awayLogo=ball_logo;\r\n           if(awayObj !== undefined){awayLogo=awayObj.logo}\r\n\r\n           const scoreColors = this.calcScores(homeTeamScore, awayTeamScore)\r\n      \r\n            return (\r\n            <div className=\"single_game\" key={i}>\r\n\r\n              <div className='row' >\r\n                <div className='col-6'>\r\n                  <img className='img-fluid' src={homeLogo} alt={(homeTeamName+' logo')} width=\"80px\" height=\"auto\" />\r\n                </div>\r\n                <div className='col-6'>\r\n                  <img className='img-fluid' src={awayLogo} alt={(awayTeamName+' logo')} width=\"80px\" height=\"auto\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row' >\r\n                <div className='col-6'>\r\n                    <h4 style={{fontSize:\"1.1vw\"}}>{homeTeamName}</h4>\r\n                </div>\r\n                <div className='col-6'>\r\n                  <h4 style={{fontSize:\"1.1vw\"}}>{awayTeamName}</h4>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row'>\r\n                <div className='col-6'>\r\n                  {scoreColors[0]}\r\n                </div>\r\n                <div className='col-6'>\r\n                  {scoreColors[1]}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n              \r\n            )\r\n        })}\r\n       </div>\r\n\r\n     )\r\n\r\n}\r\n    \r\n  render() {\r\n    if(!this.state.liveGamesLoaded || !this.state.teamsMappingsLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading Live Game Data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"align-center live_box\">\r\n          <h1 style={{fontSize:\"2vw\"}}>\r\n            Live Games \r\n            <nobr className=\"reddot\">🔴</nobr>\r\n          </h1>    \r\n          <br></br>\r\n          {this.load_data(this.state.data)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './sidebar.css';\r\n\r\nexport default class Sidebar extends Component {\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"sidebar \">\r\n                \r\n                <div className='row'>\r\n                    <div className='col-2 menu_icon'>☰</div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-2'></div>\r\n                    <div className='col-3'>\r\n                        <a href=\"/\">Home</a>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div className='row'>\r\n                    <div className='col-2'></div>\r\n                    <div className='col-3'>\r\n                        <a href=\"/teams\">Teams</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                <div className='col-2'></div>\r\n                    <div className='col-3'>\r\n                        <a href=\"/players\">Players</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                <div className='col-2'></div>\r\n                    <div className='col-3'>\r\n                        <a href=\"/standings\">Standings</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                <div className='col-2'></div>\r\n                    <div className='col-3'>\r\n                        <a href=\"/schedules\">Schedules</a>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './header.css';\r\n\r\nimport ball_logo from '../assets/basketball_logo_t.png';\r\n\r\nexport default class Sidebar extends Component {\r\n\r\n\r\n    render() {\r\n        return(\r\n          <div className=\"title\">\r\n            <div className='jumbotron'>\r\n                <img className=\"d-inline-block img-fluid logo\" src={ball_logo} alt='logo' height='auto' width='13%'/>\r\n                <h1 className='d-inline-block display-2 title_text'>NBA DASHBOARD</h1>\r\n            </div>\r\n          </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\n\r\nimport GraphCreation from './graphCreation';\r\nimport Live from './live';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\nimport './homepage.css';\r\n\r\nrequire(\"dotenv\").config();\r\n\r\n\r\n\r\nexport default class Homepage extends Component {\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n          <Header />\r\n        \r\n          <div className='row'>\r\n            <div className=\"col-xl-2 col-lg-2 col-md-6 col-sm-6 \" >\r\n\r\n              <Live all_data={this.props.all_data}/>\r\n\r\n            </div>\r\n            <div className=\"col-xl-9 col-lg-9 col-md-11 col-sm-11\" >\r\n\r\n              <Tabs className='tabs' defaultActiveKey=\"ppg\" id=\"uncontrolled-tab-example\" >\r\n\r\n                <Tab className='tab' eventKey=\"ppg\" title=\"Points Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"PPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"fg\" title=\"Field Goals\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"doublebar\"} \r\n                    stat_to_graph={\"FGA FGM FG%\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"3p\" title=\"Three Pointers\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"doublebar\"} \r\n                    stat_to_graph={\"3PA 3PM 3P%\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"ft\" title=\"Free Throws\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"doublebar\"} \r\n                    stat_to_graph={\"FTA FTM FT%\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"apg\" title=\"Assists Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"APG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"bpg\" title=\"Blocks Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"BPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"orb\" title=\"Offensive Rebounds\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"ORB\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"drb\" title=\"Defensive Rebounds\" >\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"DRB\"}\r\n                  />\r\n                  \r\n\r\n\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"pf\" title=\"Personal Fouls\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"PF\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"gp\" title=\"Games Played\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"GP\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"rpg\" title=\"Rebounds Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"RPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"spg\" title=\"Steals Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"SPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"tov\" title=\"Turnovers\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"TOV\"}\r\n                  />\r\n                </Tab>\r\n                \r\n              </Tabs>\r\n\r\n            </div>\r\n            \r\n            <div className=\"col-2\"  >\r\n              <Sidebar />\r\n            </div>\r\n          </div>\r\n\r\n          \r\n          \r\n\r\n          \r\n          \r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\nimport './teams.css';\r\n\r\nexport default class Teams extends Component {\r\n \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      data: {},\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount(){\r\n\r\n    const url = 'https://api-nba-v1.p.rapidapi.com/teams/league/standard';\r\n    // const url = 'http://localhost:8000/api/teams/league/standard';\r\n\r\n    let loadResponse = async () => {\r\n        await fetch(url, \r\n          {\"method\": \"GET\",\r\n           \"headers\":\r\n           {\r\n            \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n            }\r\n          }).then(response=>response.json())\r\n            .then(json=>{\r\n            // console.log(json);\r\n            this.setState({data: json, isLoaded: true})\r\n          }).catch(err=>{\r\n            console.log(err);\r\n          })\r\n\r\n    }\r\n\r\n    loadResponse();\r\n}\r\n\r\n\r\nload_data = () => {\r\n  return(\r\n\r\n      <div className='container'>\r\n        <div className='d-flex flex-wrap justify-content-around'>\r\n        {this.state.data.api.teams.map((item, i) => {\r\n           if (item.nbaFranchise === \"1\" && item.city !== \"Home\" && item.city !== \"Away\"){ // only dispaly NBA Teams\r\n            return (\r\n            <div key={i}>\r\n              <Link to={{\r\n                pathname: '/teams/teamId/' + item.teamId,\r\n                state: {\r\n                  data: item\r\n                }\r\n              }}\r\n              className= 'team_link'\r\n              > \r\n              <div className='team_choice '>\r\n                <img className='img-fluid team_logo' src={item.logo} alt={(item.fullName)+' logo'} width={130} height='auto' />\r\n                <div className='team_text'>\r\n                {item.fullName}\r\n                </div>\r\n              </div>\r\n               </Link>\r\n              \r\n            </div>\r\n            )\r\n          } else {\r\n            return (null)\r\n          }\r\n        })}\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n     )\r\n\r\n}\r\n    \r\n  render() {\r\n    if(!this.state.isLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading teams data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"align-center\">\r\n          <Header />\r\n          <h1>\r\n            NBA Teams\r\n          </h1>\r\n          \r\n          {this.load_data(this.state.data)}\r\n\r\n          <Sidebar />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\nimport './players.css';\r\n\r\n\r\nexport default class Players extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      teamsMappingsLoaded: false,\r\n      data: {},\r\n      teamsMappings: {}\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getAllPlayers()\r\n      .then(res1 => this.load_data(res1)\r\n        .then(res3 => this.setState({\r\n          data: res3,\r\n          isLoaded: true\r\n        }))\r\n      )\r\n      .then(this.getTeamsMappings().then(res2 => this.setState({\r\n        teamsMappings: res2,\r\n        teamsMappingsLoaded: true\r\n      })))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n\r\n  getAllPlayers = async () => {\r\n    // const response = await fetch('http://localhost:8000/api/players/league/standard', \r\n    const response = await fetch('https://api-nba-v1.p.rapidapi.com/players/league/standard',\r\n      {\"method\": \"GET\",\r\n       \"headers\":\r\n       {\r\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        }\r\n      });\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n  \r\n  getTeamsMappings = async () => {\r\n      const response = await fetch('/api/teams/mappings', \r\n        {\"method\": \"GET\",\r\n         \"headers\":\r\n         {\r\n          \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n          }\r\n        });\r\n        \r\n        const body = await response.json();\r\n        \r\n        if (response.status !== 200) {\r\n          return {}; \r\n        }\r\n        \r\n        return body;\r\n\r\n  }\r\n  \r\n  goToPlayerPage = (id) => {\r\n    window.location.assign('/players/playerId/'+id);\r\n  }\r\n  \r\n  \r\n\r\n  \r\n  load_data = async (rawData) => {\r\n  \r\n    \r\n    console.log(rawData.api.players.length)\r\n    const dataRows = rawData.api.players.map((item, i) => {\r\n      var currentRow = {};\r\n      // const playerURL = \"/players/playerId/\" + item.playerId;\r\n      const playerName = item.firstName + \" \" + item.lastName;\r\n      \r\n      currentRow[\"id\"] = item.playerId;\r\n      currentRow[\"name\"] = playerName;\r\n      currentRow[\"team\"] = this.state.teamsMappings[item.teamId];\r\n      currentRow[\"college\"] = item.collegeName;\r\n      currentRow[\"joined\"] = item.startNba;\r\n      currentRow[\"birthdate\"] = item.dateOfBirth;\r\n      currentRow[\"weight\"] = item.weightInKilograms;\r\n      currentRow[\"height\"] = item.heightInMeters;\r\n      \r\n      currentRow[\"clickEvent\"] = () => this.goToPlayerPage(item.playerId);\r\n      \r\n      return currentRow; \r\n    });\r\n    \r\n    const dataColumns = [\r\n            {\r\n              label: 'Id',\r\n              field: 'id',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Player Name',\r\n              field: 'name',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Current Team',\r\n              field: 'team',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'College Team',\r\n              field: 'college',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Joined NBA',\r\n              field: 'joined',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Date of Birth',\r\n              field: 'birthdate',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Weight (kg)',\r\n              field: 'weight',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Height (m)',\r\n              field: 'height',\r\n              sort: 'asc'\r\n            }\r\n          ];\r\n  \r\n    const playerData = {\r\n      columns: dataColumns,\r\n      rows: dataRows\r\n    };\r\n       \r\n    return playerData;\r\n  }\r\n    \r\n  render() {\r\n    if(!this.state.isLoaded || !this.state.teamsMappingsLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading players data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"align-center\">\r\n          <Header />\r\n          <h1>\r\n            NBA Players\r\n          </h1>\r\n          <div className='container'>\r\n            <div className='d-flex flex-wrap justify-content-around'>\r\n              <MDBDataTable\r\n                 striped\r\n                 bordered\r\n                 responsive\r\n                 data={this.state.data}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Sidebar />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\nimport './player.css';\r\n\r\nexport default class Player extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerDetailsLoaded: false,\r\n      teamsMappingsLoaded: false,\r\n      playerDetails: {},\r\n      teamsMappings: {}\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n      \r\n      this.getPlayerDetails(this.props.match.params.id)\r\n        .then(res1 => this.setState({ \r\n          playerDetails: res1.api.players[0],\r\n          playerDetailsLoaded: true\r\n        }))\r\n        .then(this.getTeamsMappings()\r\n          .then(res2 => this.setState({ \r\n            teamsMappings: res2,\r\n            teamsMappingsLoaded: true,\r\n          })))\r\n        .catch(err => console.log(err));\r\n        \r\n  }\r\n  \r\n  getPlayerDetails = async (id) => {\r\n      const response = await fetch('https://api-nba-v1.p.rapidapi.com/players/playerId/' + id,\r\n      // const response = await fetch('http://localhost:8000/api/players/playerId/216', \r\n        {\"method\": \"GET\",\r\n         \"headers\":\r\n         {\r\n          \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n          }\r\n        });\r\n        \r\n        const body = await response.json();\r\n        \r\n        if (response.status !== 200) {\r\n          return {}; \r\n        }\r\n        \r\n        return body;\r\n\r\n  }\r\n  \r\n  getTeamsMappings = async () => {\r\n      const response = await fetch('/api/teams/mappings', \r\n        {\"method\": \"GET\",\r\n         \"headers\":\r\n         {\r\n          \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n          }\r\n        });\r\n        \r\n        const body = await response.json();\r\n        \r\n        if (response.status !== 200) {\r\n          return {}; \r\n        }\r\n        \r\n        return body;\r\n\r\n  }\r\n  \r\n  load_data = () => {\r\n    const playerImageURL = \"https://nba-players.herokuapp.com/players/\" + this.state.playerDetails.lastName + \"/\" + this.state.playerDetails.firstName;\r\n    const playerImageALT = \"Headshot image of Nba Player \" + this.state.playerDetails.firstName + \" \" + this.state.playerDetails.lastName;\r\n    return(\r\n      <div>\r\n        <div>\r\n        <img src={playerImageURL} alt={playerImageALT}/>\r\n        </div>\r\n        <div className=\"player-info\">\r\n           <h1>{this.state.playerDetails.firstName} {this.state.playerDetails.lastName}</h1>\r\n           <h5>{this.state.teamsMappings[this.state.playerDetails.teamId]} | No. {this.state.playerDetails.leagues.standard.jersey}</h5>\r\n           <h6>Weight (kg): {this.state.playerDetails.weightInKilograms}</h6>\r\n           <h6>Height (m): {this.state.playerDetails.heightInMeters}</h6>\r\n           <h6>Birthdate: {this.state.playerDetails.dateOfBirth}</h6>\r\n           <h6>College Team: {this.state.playerDetails.collegeName}</h6>\r\n           <h6>Affiliation: {this.state.playerDetails.affiliation}</h6>\r\n           <h6>Position: {this.state.playerDetails.leagues.standard.position}</h6>\r\n        </div>\r\n      </div>\r\n       )\r\n       \r\n\r\n  }\r\n    \r\n  render() {\r\n    if(!this.state.playerDetailsLoaded || !this.state.teamsMappingsLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading player details data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <Header />\r\n      <div className=\"align-center\">\r\n          {this.load_data(this.state.data)}\r\n          <Sidebar />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport GraphCreation from './graphCreation';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\nexport default class Standing extends Component {\r\n \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teamsMappingsLoaded: false,\r\n      standingsLoaded: false,\r\n      standingsWest: {},\r\n      standingsEast: {},\r\n      teamsMappings: {}\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    \r\n    this.getStandings()\r\n      .then(res1 => this.setState({ \r\n        standingsEast: res1.api.standings.filter((team) => team.conference.name === \"east\"),\r\n        standingsWest: res1.api.standings.filter((team) => team.conference.name === \"west\"),\r\n        standingsLoaded: true\r\n      }))\r\n      .then(this.getTeamsMappings()\r\n        .then(res2 => this.setState({ \r\n          teamsMappings: res2,\r\n          teamsMappingsLoaded: true,\r\n        })))\r\n      .catch(err => console.log(err));\r\n    \r\n  }\r\n\r\n\r\ngetStandings = async () => {\r\n    const response = await fetch('https://api-nba-v1.p.rapidapi.com/standings/standard/2019',\r\n    // const response = await fetch('http://localhost:8000/api/standings/standard/2019', \r\n      {\"method\": \"GET\",\r\n       \"headers\":\r\n       {\r\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        }\r\n      });\r\n      \r\n      const body = await response.json();\r\n      \r\n      if (response.status !== 200) {\r\n        return {}; \r\n      }\r\n      \r\n      return body;\r\n\r\n}\r\n\r\ngetTeamsMappings = async () => {\r\n    const response = await fetch('/api/teams/mappings', \r\n      {\"method\": \"GET\",\r\n       \"headers\":\r\n       {\r\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        }\r\n      });\r\n      \r\n      const body = await response.json();\r\n      \r\n      if (response.status !== 200) {\r\n        return {}; \r\n      }\r\n      \r\n      return body;\r\n\r\n}\r\n\r\n\r\nload_data = (standings) => {\r\n \r\n  \r\n  const sortedStandings = standings.sort((a, b) => (parseInt(a.conference.rank) > parseInt(b.conference.rank)) ? 1 : -1);\r\n  // console.log(sortedStandings);\r\n  // console.log(this.props.all_data);\r\n\r\n  //format the data to use with recharts library\r\n  //this puts all the previous available data from the homepage onto the standings data\r\n  let comp_data = sortedStandings;\r\n  comp_data.forEach(new_stats => {\r\n    let found_teamid = this.props.all_data.team_stats.find(e => {\r\n      if(e.teamId === new_stats.teamId){return true}\r\n      return false;\r\n    })\r\n    if(found_teamid !== undefined){\r\n      for(const property in found_teamid) {\r\n        new_stats[property] = found_teamid[property];\r\n      }\r\n    }\r\n  })\r\n  // console.log('final', comp_data);\r\n\r\n  \r\n  return(\r\n      <GraphCreation\r\n      all_team_data={comp_data}\r\n      type_of_graph={\"singlebar\"}\r\n      stat_to_graph={\"winPercentage\"}\r\n      />\r\n     )\r\n\r\n}\r\n    \r\n  render() {\r\n    if(!this.state.teamsMappingsLoaded || !this.state.standingsLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading Live Games Data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"align-center\">\r\n          <Header />\r\n          <h1>\r\n            Standings\r\n          </h1>\r\n          \r\n            <div className='row'>\r\n              <div className='col-12 col-sm-12 col-md-12 col-lg-12 col-xl-6'>\r\n                <h3>East Conference Standings</h3>\r\n                {this.load_data(this.state.standingsEast)}\r\n              </div>\r\n              <div className='col-12 col-sm-12 col-md-12 col-lg-12 col-xl-6'>\r\n                <h3>West Conference Standings</h3>\r\n                {this.load_data(this.state.standingsWest)}\r\n              </div>\r\n            </div>\r\n          <Sidebar />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\nimport './schedules.css'\r\n\r\nexport default class Schedules extends Component {\r\n \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      data: {},\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount(){\r\n\r\n    const url = 'https://api-nba-v1.p.rapidapi.com/games/league/standard/2019';\r\n    //const url = 'http://localhost:8000/api/games/league/standard/2019';\r\n\r\n    let loadResponse = async () => {\r\n        await fetch(url, \r\n          {\"method\": \"GET\",\r\n           \"headers\":\r\n           {\r\n            \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n            }\r\n          }).then(response=>response.json())\r\n            .then(json=>{\r\n            console.log(json);\r\n            this.setState({data: json, isLoaded: true})\r\n          }).catch(err=>{\r\n            console.log(err);\r\n          })\r\n\r\n    }\r\n\r\n    loadResponse();\r\n}\r\n\r\n\r\nload_data = () => {\r\n  return(\r\n       <table className=\"large-tables table table-responsive\" id=\"schedules\">\r\n         <thead>\r\n            <tr>\r\n               <th>Game</th>\r\n               <th>Status</th>\r\n               <th>Date</th>\r\n               <th>Arena</th>\r\n               <th>City</th>\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n         {this.state.data.api.games.map((item, i) => {\r\n          //  let curr_status;\r\n          //  if(item.statusGame === 'Scheduled'){curr_status = <td style={{color: '#2048fa', fontWeight: 'bolder'}}>{item.statusGame}</td>}\r\n          //  else{curr_status = <td style={{color: 'black'}}>{item.statusGame}</td>}\r\n\r\n           const homeTeamShortName = item.hTeam.shortName;\r\n           const awayTeamShortName = item.vTeam.shortName;\r\n           const homeTeamScore = item.hTeam.score.points;\r\n           const awayTeamScore = item.vTeam.score.points;\r\n\r\n           var options = {\r\n            timeZone: \"America/Los_Angeles\",\r\n            year: 'numeric', month: 'short', day: 'numeric',\r\n            hour: 'numeric', minute: 'numeric', timeZoneName: 'short'\r\n            };\r\n        \r\n            var formatter = new Intl.DateTimeFormat([], options);\r\n            \r\n            // var UTCTime = \"2017-09-03T02:00:00Z\";\r\n            var localTime = formatter.format(new Date(item.startTimeUTC));\r\n            // var currentTime = formatter.format(new Date()); console.log(currentTime, localTime);\r\n\r\n            // let temp_data = \r\n            // <div>\r\n            //   <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\r\n            //   <td>{item.statusGame}</td>\r\n            //   <td>{localTime}</td>\r\n            //   <td>{item.arena}</td>\r\n            //   <td>{item.city}</td>\r\n            // </div>\r\n\r\n            let curr_row;\r\n            if(item.statusGame === 'Scheduled'){\r\n              curr_row=\r\n              <tr key={i} className='scheduled'>\r\n                <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\r\n                <td>{item.statusGame}</td>\r\n                <td>{localTime}</td>\r\n                <td>{item.arena}</td>\r\n                <td>{item.city}</td>\r\n              </tr>\r\n            }\r\n            else{\r\n              curr_row=\r\n              <tr key={i} className='finished'>\r\n                <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\r\n                <td>{item.statusGame}</td>\r\n                <td>{localTime}</td>\r\n                <td>{item.arena}</td>\r\n                <td>{item.city}</td>\r\n              </tr>}\r\n\r\n            return (\r\n              curr_row\r\n            // <tr key={i}>\r\n            //   <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\r\n            //   <td>{item.statusGame}</td>\r\n            //   <td>{localTime}</td>\r\n            //   <td>{item.arena}</td>\r\n            //   <td>{item.city}</td>\r\n            // </tr>\r\n            )\r\n       })}\r\n         </tbody>\r\n       </table>\r\n     )\r\n\r\n}\r\n    \r\n  render() {\r\n    if(!this.state.isLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading schedules and results ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"align-center\">\r\n          <Header />\r\n          <h1>\r\n            Schedules and Results\r\n          </h1>\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-auto\" style={{maxWidth: '90%'}}>\r\n              {this.load_data(this.state.data)}\r\n            </div>\r\n          </div>\r\n          <Sidebar />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Radar} from 'react-chartjs-2';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\nimport './team.css';\r\n\r\nexport default class Team extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      team: {}\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n      this.setState({ \r\n        team: this.props.location.state.data,  \r\n        isLoaded: true\r\n      })\r\n  }\r\n  \r\n  getTeamData = (city) => {\r\n    var all_teams_data = this.props.all_data;\r\n    console.log(all_teams_data);\r\n    var teamData = {};\r\n    var averageMetrics = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0];\r\n    \r\n    all_teams_data.team_stats.forEach(function (item) {\r\n      \r\n      averageMetrics[0] += parseFloat(item[\"GP\"]);\r\n      averageMetrics[1] += parseFloat(item[\"MPG\"]);\r\n      averageMetrics[2] += parseFloat(item[\"FGM\"]);\r\n      averageMetrics[3] += parseFloat(item[\"3PM\"]);\r\n      averageMetrics[4] += parseFloat(item[\"PF\"]);\r\n      averageMetrics[5] += parseFloat(item[\"RPG\"]);\r\n      averageMetrics[6] += parseFloat(item[\"APG\"]);\r\n      averageMetrics[7] += parseFloat(item[\"PPG\"]);\r\n      \r\n      \r\n      if (item.city === city){\r\n        const teamMetrics = [\r\n          item[\"GP\"],\r\n          item[\"MPG\"],\r\n          item[\"FGM\"],\r\n          item[\"3PM\"],\r\n          item[\"PF\"],\r\n          item[\"RPG\"],\r\n          item[\"APG\"],\r\n          item[\"PPG\"]          \r\n        ];\r\n        const teamLabels = [\r\n          all_teams_data.glossary[\"GP\"],\r\n          all_teams_data.glossary[\"MPG\"],\r\n          all_teams_data.glossary[\"FGM\"],\r\n          all_teams_data.glossary[\"3PM\"],\r\n          all_teams_data.glossary[\"PF\"],\r\n          all_teams_data.glossary[\"RPG\"],\r\n          all_teams_data.glossary[\"APG\"],\r\n          all_teams_data.glossary[\"PPG\"]\r\n        ];\r\n        \r\n        teamData[\"teamMetrics\"] = teamMetrics;\r\n        teamData[\"labels\"] = teamLabels;\r\n      }\r\n       \r\n    });\r\n    \r\n    console.log(averageMetrics);\r\n    teamData[\"averageMetrics\"] = averageMetrics.map(x => (x/all_teams_data.team_stats.length).toFixed(2));\r\n    console.log(teamData);\r\n    return teamData;\r\n   };\r\n  \r\n  load_graph = () => {\r\n      const teamData = this.getTeamData(this.state.team.city);\r\n      const data = {\r\n        datasets: [\r\n          {\r\n            data: teamData.averageMetrics,\r\n            backgroundColor: \"rgba(220,220,220,0.2)\",\r\n            pointBackgroundColor: \"rgba(220,220,220,1)\",\r\n            borderColor: \"rgba(1220,220,220,0.5)\",\r\n            pointHighlightStroke: \"rgba(220,220,220,1)\",\r\n            label: \"Avg NBA Team\",\r\n          },\r\n          {\r\n            data: teamData.teamMetrics,\r\n            backgroundColor: \"rgba(9,112,84,0.2)\",\r\n            pointBackgroundColor: \"rgba(9,112,84,1)\",\r\n            borderColor: \"rgba(9,112,84,0.5)\",\r\n            pointHighlightStroke: \"rgba(9,112,84,1)\",\r\n            label: this.state.team.fullName,\r\n          },\r\n        ],\r\n        labels: teamData.labels,\r\n      };\r\n    \r\n      const options = {\r\n        legend: {\r\n          position: 'top'\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Team Stats'\r\n        },\r\n        scale: {\r\n          reverse: false,\r\n          gridLines: {\r\n            color: [\r\n              'black',\r\n              'red',\r\n              'orange',\r\n              'yellow',\r\n              'green',\r\n              'blue',\r\n              'indigo',\r\n              'violet'\r\n            ]\r\n          },\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      };\r\n    \r\n    return(\r\n      <Radar data={data} options={options}/>\r\n    )\r\n  }\r\n  \r\n\r\n  \r\n  load_data = () => {\r\n    const teamLogoALT = \"Logo image of \" + this.state.team.fullName;\r\n    return(\r\n      <div>\r\n        <div>\r\n        <img className=\"team-logo\" src={this.state.team.logo} alt={teamLogoALT}/>\r\n        </div>\r\n        <div className=\"team-info\">\r\n           <h1>{this.state.team.fullName}</h1>\r\n           <h5>Abbreviation: {this.state.team.shortName}</h5>\r\n           <h5>Nickname: {this.state.team.nickname}</h5>\r\n           <h5>Conference: {this.state.team.leagues.standard.confName}</h5>\r\n           <h5>Divison: {this.state.team.leagues.standard.divName}</h5>\r\n        </div>\r\n      </div>\r\n       )\r\n       \r\n\r\n  }\r\n    \r\n  render() {\r\n    if(!this.state.isLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading player data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Header />\r\n        <div className='align-center'>\r\n          <div className='row'>\r\n            <div className='col-12 col-sm-12 col-md-12 col-lg-4'>\r\n              {this.load_data(this.state.data)}\r\n            </div>\r\n            <div className='col-12 col-sm-12 col-md-12 col-lg-8'>\r\n              {this.load_graph(this.props.allData)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Sidebar />\r\n        </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Homepage from './components/homepage';\r\nimport Teams from './components/teams';\r\nimport Players from './components/players';\r\nimport Player from './components/player';\r\nimport Live from './components/live';\r\nimport Standings from './components/standings';\r\nimport Schedules from './components/schedules';\r\nimport Team from './components/team';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\n\r\n// function App() {\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      data: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let loadResponse = async () => {\r\n      await fetch(\"/api/team_stats\")\r\n      .then((res) => res.json())\r\n      .then((team_data) => {\r\n\r\n        function compare_team_names(a, b){\r\n          let comparison = 0;\r\n          if(a.Team > b.Team){\r\n            comparison = 1;\r\n          } else if(a.Team < b.Team) {\r\n            comparison = -1;\r\n          }\r\n          return comparison;\r\n        }\r\n\r\n        team_data.team_stats.sort(compare_team_names);\r\n\r\n        this.setState({ isLoaded: false, data: team_data })\r\n    })\r\n      .catch((err) => console.log(\"Request failed\", err));\r\n\r\n      await fetch('/api/team_info')\r\n        .then((res) => res.json())\r\n        .then((team_names) => {\r\n          let temp_data = this.state.data;\r\n          team_names.forEach(api_team => {\r\n            let found_city = temp_data.team_stats.find(e => {\r\n              if(e.Team === api_team.city){ return true}\r\n              if(e.Team === \"L.A. Clippers\" && api_team.city === \"LA\"){return true}\r\n              if(e.Team === \"L.A. Lakers\" && api_team.city === \"Los Angeles\"){return true}\r\n              return false;\r\n            });\r\n            if(found_city !== undefined){\r\n              for(const property in api_team) {\r\n                found_city[property] = api_team[property];\r\n              }\r\n            }\r\n          })\r\n\r\n          this.setState({ isLoaded: true, data: temp_data })\r\n        })\r\n        .catch((err) => console.log(\"Request failed\", err));\r\n\r\n    // await fetch(\"http://localhost:8000/api/teams/league/standard\")\r\n\r\n    // await fetch(\"https://api-nba-v1.p.rapidapi.com/teams/league/standard\",\r\n    //   {\"method\": \"GET\",\r\n    //    \"headers\":\r\n    //    {\r\n    //     \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n    //     \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n    //     }\r\n    //   })\r\n    //   .then((res) => res.json())\r\n    //   .then((team_names) => {\r\n    //     let temp_data = this.state.data;\r\n    //     team_names.api.teams.forEach(api_team => {\r\n    //       //check if api_team name exists in temp data, then put it there if it does\r\n    //       let found_city = temp_data.team_stats.find(e => {\r\n    //         if(e.Team === api_team.city){ return true}\r\n    //         if(e.Team === \"L.A. Clippers\" && api_team.city === \"LA\"){return true}\r\n    //         if(e.Team === \"L.A. Lakers\" && api_team.city === \"Los Angeles\"){return true}\r\n    //         return false;\r\n    //       });\r\n    //       if(found_city !== undefined){\r\n    //         // found_city['team_info'] = api_team;\r\n    //         //loop through api_team info and add each field individually into found city data\r\n    //         for(const property in api_team) {\r\n    //           found_city[property] = api_team[property];\r\n    //         }\r\n    //       }\r\n    //     })\r\n\r\n    //     this.setState({ isLoaded: true, data: temp_data })\r\n    //   })\r\n\r\n    // };\r\n    }\r\n    loadResponse();\r\n  }\r\n  \r\n\r\n  render(){\r\n    if(!this.state.isLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return (\r\n        <Router>\r\n          {/* <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li> */}\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={(props) => <Homepage all_data={this.state.data}/> }\r\n            />\r\n            <Route\r\n              path=\"/teams\"\r\n              exact\r\n              render={(props) => <Teams /> }\r\n            />\r\n            <Route\r\n              path=\"/teams/teamId/:id\"\r\n              exact\r\n              render={(props) => (\r\n                <Team {...props} all_data={this.state.data}/>\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/players\"\r\n              exact\r\n              render={(props) => <Players /> }\r\n            />\r\n            <Route\r\n              path=\"/players/playerId/:id\"\r\n              exact\r\n              render={(props) => (\r\n                <Player {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/live\"\r\n              exact\r\n              render={(props) => <Live /> }\r\n            />\r\n            <Route\r\n              path=\"/standings\"\r\n              exact\r\n              render={(props) => <Standings all_data={this.state.data}/> }\r\n            />\r\n            <Route\r\n              path=\"/schedules\"\r\n              exact\r\n              render={(props) => <Schedules /> }\r\n            />\r\n\r\n            <Route render={()=> <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        </Router>  \r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}